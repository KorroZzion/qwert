name: 'C++ CI'

on:
  push:
    branches:
      - main
      - feature/github_actions

jobs:
  build_linux:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: sudo apt-get update && sudo apt-get install libboost-test-dev -y
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      - run: cmake --build .
      - run: cmake --build . --target test
      - run: cmake --build . --target package
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./helloworld-0.0.${{ github.run_number }}-Linux.deb
          asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package

  build_windows:
    runs-on: windows-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      # Кэшируем зависимости, чтобы не скачивать их каждый раз
      - name: Cache dependencies (CMake and Boost)
        uses: actions/cache@v3
        with:
          path: |
            C:/Program Files (x86)/boost
            C:/Program Files/CMake
          key: ${{ runner.os }}-boost-cmake-${{ hashFiles('**/CMakeLists.txt') }}

      # Устанавливаем Visual Studio Build Tools
      - name: Install Visual Studio Build Tools
        run: |
          choco install visualstudio2022buildtools --version=17.2.1 --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended --includeOptional"

      # Устанавливаем CMake и Boost, если они не закешированы
      - name: Install CMake and Boost
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' --yes --limit-output
          choco install boost-msvc-14.1 --yes --limit-output

      # Конфигурируем проект с использованием Visual Studio 2022
      - run: cmake . -G "Visual Studio 17 2022" -A x64 -DPATCH_VERSION=${{ github.run_number }}
      
      # Сборка проекта
      - run: cmake --build . --config Release
      
      # Запуск тестов
      - run: ctest --output-on-failure

      # Создание релиза для Windows
      - name: Create Release
        id: create_release_windows
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}-windows
          release_name: Release ${{ github.run_number }} for Windows
          draft: false
          prerelease: false

      # Загрузка артефактов релиза
      - name: Upload Release Asset
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_windows.outputs.upload_url }}
          asset_path: ./Release/helloworld-0.0.${{ github.run_number }}-win64.zip
          asset_name: helloworld-0.0.${{ github.run_number }}-win64.zip
          asset_content_type: application/zip
